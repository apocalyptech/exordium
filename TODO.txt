Things I want to get done before inevitably letting the project
bitrot:

* Tests for views
* Album art is being loaded multiple times for the same
  album during add()
* Management subcommands to add/update the library

Things which may or may not make that cut:

* Direct links to pages with django-tables2 (instead of just
  next/prev)
* Ability to specify subdirectories when doing add/update
  actions, to only process a subset of the library.  (Might
  change add/update to a dropdown or radio selection, too.)
* Hm, should we store file size?  Might be nice to show
  how much room things are taking.  Would know for album
  zipfiles, too.
* http://reinout.vanrees.org/weblog/2014/05/19/context.html
  Basically, overriding get_context_data() in our views is
  wordy and not needed most of the time.  Use 'view.varname'
  in the template and it'll pull from the named var/func.
  No fussy context fiddling required!

Things which, if I'm being honest here, are likely to never
actually happen:

* More precise summary text for classical
  * "Composer, tracks 1-5, 8: foo", etc.
* Extra details on album song list (format, bitrate, etc)
  (something else for user prefs.  Will have to wait until
  I figure out a *reasonable* way to have dynamic column
  definitions in django-tables2.  I don't want to define
  a different class for each possibility.)
* Improve the Django admin area and make it actually-useful
* Might be nice to support some artist groupings.
  ("Amanda Palmer and the Grand Theft Orchestra" albums
  should probably show up alongside "Amanda Palmer" albums,
  etc.  I assume this would be something manual-only from
  the admin area.  The "correct" thing to do might be to
  find a tag to use, instead, but I'm guessing that'd
  overly-complicate the backend, which I think I'd like
  to keep cleaner.  But it might be a monster anyway.)
* "Random albums" page?
* User preferences don't seem to always get applied quite
  right?  I wonder if it's something to do with
  threading?  For instance for a bit I could pretty
  repeatably go back and forth between home/artistbrowse
  and have one with show_live and the other without.
  edit: yep, I'm guessing it's to do with having multiple
  WSGI threads running.  Global options can end up not
  "taking" on the other thread as well, it looks like.
  The easiest to play with is probably the zipfile
  path - change it to something invalid and note that
  sometimes you'll get links, sometimes you won't.
* Maybe make "Various" a non-reserved artist name?  We
  could put in a big ol' random mess of characters for
  the name, and just rely on Artist.various to display
  it properly on the UI and all that.  That way if we
  ever have a band whose name really is "Various" we
  should be able to support it.  Would have to figure out
  some UI differences to differentiate, if so.  Maybe
  italics or something for the special artist?
* Theme support might be nice, and should be pretty
  trivial, though I doubt I'll take the time to figure
  it out.
* Option to defer checksum calculations when doing initial
  imports?  (Perhaps with a management subcommand to do
  those from the CLI?) Would make imports quicker,
  though I'd have to make sure to have checks in place to
  ensure checksums are present before processing updates.
